{"version":3,"sources":["../src/grid.js"],"names":["GridDiv","div","props","rowHeaders","colHeaders","GridCell","top","bottom","left","right","validateRows","rows","colsRegEx","toValidate","map","row","split","cols","reduce","acc","val","length","concat","colCounts","allSame","slice","extractDimensions","layout","areas","i","j","cellAreas","forEach","area","GridComponentFactory","args","layoutString","match","input","rowHeadersToUse","join","extractedDimensions","sortedDimensionKeys","Object","keys","sort","component","children","numberOfChildren","Children","count","child","index","dimension","item","cloneElement","style","position","className"],"mappings":"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","file":"grid.js","sourcesContent":["/**\n * Copyright 2017 Google LLC\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n * https://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport styled from 'styled-components';\n\nconst GridDiv = styled.div`\n\tdisplay: grid;\n\tgrid-template-rows: ${props => props.rowHeaders || 'initial' };\n\tgrid-template-columns: ${props => props.colHeaders || 'initial' };\n`;\n\nconst GridCell = styled.div`\n\tgrid-row-start: ${props => props.top + 1};\n\tgrid-row-end: ${props => props.bottom + 2};\n\tgrid-column-start: ${props => props.left + 1};\n\tgrid-column-end: ${props => props.right + 2};\n\tposition: relative;\n`;\n\n\nconst validateRows = (rows) => {\n\tconst colsRegEx = /[\\s]+/;\n\tconst toValidate = rows.map(row => row.split(colsRegEx)).map(cols =>\n\t\tcols.reduce((acc, val) => {\n\t\t\treturn val.length == 0 ? acc : acc.concat([val]);\n\t\t}, []));\n\n\tconst colCounts = toValidate.map(row => row.length);\n\tif (colCounts.length == 1) {\n\t\treturn toValidate;\n\t}\n\tconst allSame = colCounts.slice(1).reduce((acc, val) => {\n\t\treturn acc && val == colCounts[1];\n\t}, true);\n\tif (!allSame) {\n\t\tthrow `Rows 1 - ${colCounts.length} should have the same number of ` +\n\t\t\t`columns.`;\n\t}\n\tif (colCounts[1] != 1 && colCounts[0] != colCounts[1] - 1) {\n\t\tthrow `The column headers row has too many columns.`;\n\t}\n\treturn toValidate;\n};\n\nconst extractDimensions = (layout) => {\n\tconst areas = {};\n\tfor (let i = 0; i < layout.length; i++) {\n\t\tfor (let j = 0; j < layout[i].length; j++) {\n\t\t\tif (layout[i][j] == '..') {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst cellAreas = layout[i][j].split(',');\n\t\t\tcellAreas.forEach(area => {\n\t\t\t\tif (!areas[area]) {\n\t\t\t\t\tareas[area] = {\n\t\t\t\t\t\ttop: i,\n\t\t\t\t\t\tleft: j,\n\t\t\t\t\t\tbottom: i,\n\t\t\t\t\t\tright: j,\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\tareas[area] = {\n\t\t\t\t\t\t...areas[area],\n\t\t\t\t\t\tbottom: i,\n\t\t\t\t\t\tright: j,\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\treturn areas;\n};\n\nconst GridComponentFactory = (...args) => {\n\tconst layoutString = args[0][0];\n\tconst rows = validateRows(layoutString.split('\\n').reduce((acc, row) => {\n\t\t// Verify that the row is not empty.\n\t\tconst match = row.match(/[\\s]*/);\n\t\tif (row.length > 0 && match && match[0].length != match.input.length) {\n\t\t\treturn acc.concat(row);\n\t\t}\n\t\treturn acc;\n\t}, []));\n\n\tlet rowHeaders = null;\n\tif (rows.length > 1) {\n\t\t// Remove the first row of layout data if this is a grid. If it's only\n\t\t// row headers, do not remove the first row of data.\n\t\tconst rowHeadersToUse = rows[0].length > 1 ? rows.slice(1) : rows;\n\t\trowHeaders = rowHeadersToUse.reduce((acc, row) => {\n\t\t\treturn acc.concat([row[0]]);\n\t\t}, []).join(' ');\n\t}\n\tlet colHeaders = null;\n\tif (rows[0].length > 1) {\n\t\tcolHeaders = rows[0].join(' ');\n\t}\n\tlet extractedDimensions = null;\n\tlet sortedDimensionKeys = null;\n\tif (rows.length > 1 && rows[1].length > 1) {\n\t\t// Remove the column headers and row headers.\n\t\tconst layout = rows.slice(1).map(row => row.slice(1));\n\t\textractedDimensions = extractDimensions(layout);\n\t\t// The grid items are sorted alphabetically and matched against the\n\t\t// corresponding child element. Unless the child element contains a\n\t\t// gridItem property.\n\t\tsortedDimensionKeys = Object.keys(extractedDimensions).sort();\n\t}\n\t// Return a wrapper component that lays out its children using a generated\n\t// grid and grid items. Individual grid items are used to wrap the actual\n\t// child elements.\n\tconst component = (props) => {\n\t\tlet children = props.children;\n\t\tif (extractedDimensions) {\n\t\t\tconst numberOfChildren = React.Children.count(props.children);\n\t\t\tif (numberOfChildren > sortedDimensionKeys.length) {\n\t\t\t\tthrow `There are more children than defined areas for the grid.`;\n\t\t\t} else if (numberOfChildren < sortedDimensionKeys.length) {\n\t\t\t\tthrow `There are fewer children than defined areas for the grid.`;\n\t\t\t}\n\t\t\t// Use cloneElement with an automatically assigned postion: absolute\n\t\t\t// style parameter. This allows positioning attributes of the child\n\t\t\t// element to behave as expected.\n\t\t\tchildren = React.Children.map(props.children, (child, index) => {\n\t\t\t\tlet dimension =\n\t\t\t\t\t(child.props.item && extractedDimensions[child.props.item]) ||\n\t\t\t\t\textractedDimensions[sortedDimensionKeys[index]];\n\t\t\t\treturn (\n\t\t\t\t\t<GridCell\n\t\t\t\t\t\ttop={dimension.top}\n\t\t\t\t\t\tbottom={dimension.bottom}\n\t\t\t\t\t\tleft={dimension.left}\n\t\t\t\t\t\tright={dimension.right}>\n\t\t\t\t\t\t{React.cloneElement(child, {\n\t\t\t\t\t\t\tstyle: {...child.style || {}, position: 'absolute'}\n\t\t\t\t\t\t})}\n\t\t\t\t\t</GridCell>\n\t\t\t\t)\n\t\t\t});\n\t\t}\n\t\treturn (\n\t\t\t<GridDiv\n\t\t\t\trowHeaders={rowHeaders}\n\t\t\t\tcolHeaders={colHeaders}\n\t\t\t\tclassName={props.className}>\n\t\t\t\t{children}\n\t\t\t</GridDiv>\n\t\t);\n\t};\n\t// Add properties for unit testing purposes.\n\tcomponent.rowHeaders = rowHeaders;\n\tcomponent.colHeaders = colHeaders;\n\tcomponent.extractedDimensions = extractedDimensions;\n\treturn component;\n};\nexport default GridComponentFactory;"]}